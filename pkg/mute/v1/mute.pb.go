// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: pkg/mute/v1/mute.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Mute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Mute Ranges
	MuteRanges []*MuteRange `protobuf:"bytes,1,rep,name=mute_ranges,json=muteRanges,proto3" json:"mute_ranges,omitempty"`
	// Notify Options
	Notify *NotifyOptions `protobuf:"bytes,2,opt,name=notify,proto3" json:"notify,omitempty"`
	// Notify targets
	NotifyTargets []*NotifyTarget `protobuf:"bytes,3,rep,name=notify_targets,json=notifyTargets,proto3" json:"notify_targets,omitempty"`
	// Onetime
	Onetime *OnetimeOptions `protobuf:"bytes,4,opt,name=onetime,proto3" json:"onetime,omitempty"`
	// Repeat
	Repeat *RepeatOptions `protobuf:"bytes,5,opt,name=repeat,proto3" json:"repeat,omitempty"`
	// Tags
	MuteTags []*Tag `protobuf:"bytes,6,rep,name=mute_tags,json=muteTags,proto3" json:"mute_tags,omitempty"`
}

func (x *Mute) Reset() {
	*x = Mute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_mute_v1_mute_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mute) ProtoMessage() {}

func (x *Mute) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_mute_v1_mute_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mute.ProtoReflect.Descriptor instead.
func (*Mute) Descriptor() ([]byte, []int) {
	return file_pkg_mute_v1_mute_proto_rawDescGZIP(), []int{0}
}

func (x *Mute) GetMuteRanges() []*MuteRange {
	if x != nil {
		return x.MuteRanges
	}
	return nil
}

func (x *Mute) GetNotify() *NotifyOptions {
	if x != nil {
		return x.Notify
	}
	return nil
}

func (x *Mute) GetNotifyTargets() []*NotifyTarget {
	if x != nil {
		return x.NotifyTargets
	}
	return nil
}

func (x *Mute) GetOnetime() *OnetimeOptions {
	if x != nil {
		return x.Onetime
	}
	return nil
}

func (x *Mute) GetRepeat() *RepeatOptions {
	if x != nil {
		return x.Repeat
	}
	return nil
}

func (x *Mute) GetMuteTags() []*Tag {
	if x != nil {
		return x.MuteTags
	}
	return nil
}

type MuteRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Mute Range Type
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Monitor configuration
	Monitor *MuteRangeMonitor `protobuf:"bytes,2,opt,name=monitor,proto3" json:"monitor,omitempty"`
	// Alert Policy configuration
	AlertPolicy *MuteRangeAlertPolicy `protobuf:"bytes,3,opt,name=alert_policy,json=alertPolicy,proto3" json:"alert_policy,omitempty"`
}

func (x *MuteRange) Reset() {
	*x = MuteRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_mute_v1_mute_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuteRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuteRange) ProtoMessage() {}

func (x *MuteRange) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_mute_v1_mute_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuteRange.ProtoReflect.Descriptor instead.
func (*MuteRange) Descriptor() ([]byte, []int) {
	return file_pkg_mute_v1_mute_proto_rawDescGZIP(), []int{1}
}

func (x *MuteRange) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MuteRange) GetMonitor() *MuteRangeMonitor {
	if x != nil {
		return x.Monitor
	}
	return nil
}

func (x *MuteRange) GetAlertPolicy() *MuteRangeAlertPolicy {
	if x != nil {
		return x.AlertPolicy
	}
	return nil
}

type MuteRangeAlertPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Alert Policy ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MuteRangeAlertPolicy) Reset() {
	*x = MuteRangeAlertPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_mute_v1_mute_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuteRangeAlertPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuteRangeAlertPolicy) ProtoMessage() {}

func (x *MuteRangeAlertPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_mute_v1_mute_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuteRangeAlertPolicy.ProtoReflect.Descriptor instead.
func (*MuteRangeAlertPolicy) Descriptor() ([]byte, []int) {
	return file_pkg_mute_v1_mute_proto_rawDescGZIP(), []int{2}
}

func (x *MuteRangeAlertPolicy) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type MuteRangeMonitor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Monitor ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MuteRangeMonitor) Reset() {
	*x = MuteRangeMonitor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_mute_v1_mute_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuteRangeMonitor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuteRangeMonitor) ProtoMessage() {}

func (x *MuteRangeMonitor) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_mute_v1_mute_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuteRangeMonitor.ProtoReflect.Descriptor instead.
func (*MuteRangeMonitor) Descriptor() ([]byte, []int) {
	return file_pkg_mute_v1_mute_proto_rawDescGZIP(), []int{3}
}

func (x *MuteRangeMonitor) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type NotifyOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Notify Message
	Message *string `protobuf:"bytes,1,opt,name=message,proto3,oneof" json:"message,omitempty"`
	// Notify Time
	BeforeTime *string `protobuf:"bytes,2,opt,name=before_time,json=beforeTime,proto3,oneof" json:"before_time,omitempty"`
}

func (x *NotifyOptions) Reset() {
	*x = NotifyOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_mute_v1_mute_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyOptions) ProtoMessage() {}

func (x *NotifyOptions) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_mute_v1_mute_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyOptions.ProtoReflect.Descriptor instead.
func (*NotifyOptions) Descriptor() ([]byte, []int) {
	return file_pkg_mute_v1_mute_proto_rawDescGZIP(), []int{4}
}

func (x *NotifyOptions) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *NotifyOptions) GetBeforeTime() string {
	if x != nil && x.BeforeTime != nil {
		return *x.BeforeTime
	}
	return ""
}

type NotifyTarget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Notify Type
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// MemberGroup
	MemberGroup *NotifyTargetMemberGroup `protobuf:"bytes,2,opt,name=member_group,json=memberGroup,proto3" json:"member_group,omitempty"`
	// Notification
	Notification *NotifyTargetNotification `protobuf:"bytes,3,opt,name=notification,proto3" json:"notification,omitempty"`
}

func (x *NotifyTarget) Reset() {
	*x = NotifyTarget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_mute_v1_mute_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyTarget) ProtoMessage() {}

func (x *NotifyTarget) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_mute_v1_mute_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyTarget.ProtoReflect.Descriptor instead.
func (*NotifyTarget) Descriptor() ([]byte, []int) {
	return file_pkg_mute_v1_mute_proto_rawDescGZIP(), []int{5}
}

func (x *NotifyTarget) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *NotifyTarget) GetMemberGroup() *NotifyTargetMemberGroup {
	if x != nil {
		return x.MemberGroup
	}
	return nil
}

func (x *NotifyTarget) GetNotification() *NotifyTargetNotification {
	if x != nil {
		return x.Notification
	}
	return nil
}

type NotifyTargetMemberGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// MemberGroup ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *NotifyTargetMemberGroup) Reset() {
	*x = NotifyTargetMemberGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_mute_v1_mute_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyTargetMemberGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyTargetMemberGroup) ProtoMessage() {}

func (x *NotifyTargetMemberGroup) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_mute_v1_mute_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyTargetMemberGroup.ProtoReflect.Descriptor instead.
func (*NotifyTargetMemberGroup) Descriptor() ([]byte, []int) {
	return file_pkg_mute_v1_mute_proto_rawDescGZIP(), []int{6}
}

func (x *NotifyTargetMemberGroup) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type NotifyTargetNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Notification ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *NotifyTargetNotification) Reset() {
	*x = NotifyTargetNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_mute_v1_mute_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyTargetNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyTargetNotification) ProtoMessage() {}

func (x *NotifyTargetNotification) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_mute_v1_mute_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyTargetNotification.ProtoReflect.Descriptor instead.
func (*NotifyTargetNotification) Descriptor() ([]byte, []int) {
	return file_pkg_mute_v1_mute_proto_rawDescGZIP(), []int{7}
}

func (x *NotifyTargetNotification) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type OnetimeOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Start
	Start *string `protobuf:"bytes,1,opt,name=start,proto3,oneof" json:"start,omitempty"`
	// End
	End *string `protobuf:"bytes,2,opt,name=end,proto3,oneof" json:"end,omitempty"`
}

func (x *OnetimeOptions) Reset() {
	*x = OnetimeOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_mute_v1_mute_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnetimeOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnetimeOptions) ProtoMessage() {}

func (x *OnetimeOptions) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_mute_v1_mute_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnetimeOptions.ProtoReflect.Descriptor instead.
func (*OnetimeOptions) Descriptor() ([]byte, []int) {
	return file_pkg_mute_v1_mute_proto_rawDescGZIP(), []int{8}
}

func (x *OnetimeOptions) GetStart() string {
	if x != nil && x.Start != nil {
		return *x.Start
	}
	return ""
}

func (x *OnetimeOptions) GetEnd() string {
	if x != nil && x.End != nil {
		return *x.End
	}
	return ""
}

type RepeatCrontabSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Min
	Min *string `protobuf:"bytes,1,opt,name=min,proto3,oneof" json:"min,omitempty"`
	// Hour
	Hour *string `protobuf:"bytes,2,opt,name=hour,proto3,oneof" json:"hour,omitempty"`
	// Day
	Day *string `protobuf:"bytes,3,opt,name=day,proto3,oneof" json:"day,omitempty"`
	// Month
	Month *string `protobuf:"bytes,4,opt,name=month,proto3,oneof" json:"month,omitempty"`
	// Week
	Week *string `protobuf:"bytes,5,opt,name=week,proto3,oneof" json:"week,omitempty"`
}

func (x *RepeatCrontabSet) Reset() {
	*x = RepeatCrontabSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_mute_v1_mute_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepeatCrontabSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepeatCrontabSet) ProtoMessage() {}

func (x *RepeatCrontabSet) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_mute_v1_mute_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepeatCrontabSet.ProtoReflect.Descriptor instead.
func (*RepeatCrontabSet) Descriptor() ([]byte, []int) {
	return file_pkg_mute_v1_mute_proto_rawDescGZIP(), []int{9}
}

func (x *RepeatCrontabSet) GetMin() string {
	if x != nil && x.Min != nil {
		return *x.Min
	}
	return ""
}

func (x *RepeatCrontabSet) GetHour() string {
	if x != nil && x.Hour != nil {
		return *x.Hour
	}
	return ""
}

func (x *RepeatCrontabSet) GetDay() string {
	if x != nil && x.Day != nil {
		return *x.Day
	}
	return ""
}

func (x *RepeatCrontabSet) GetMonth() string {
	if x != nil && x.Month != nil {
		return *x.Month
	}
	return ""
}

func (x *RepeatCrontabSet) GetWeek() string {
	if x != nil && x.Week != nil {
		return *x.Week
	}
	return ""
}

type RepeatOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Start
	Start *string `protobuf:"bytes,1,opt,name=start,proto3,oneof" json:"start,omitempty"`
	// End
	End *string `protobuf:"bytes,2,opt,name=end,proto3,oneof" json:"end,omitempty"`
	// Crontab Duration
	CrontabDuration *string `protobuf:"bytes,3,opt,name=crontab_duration,json=crontabDuration,proto3,oneof" json:"crontab_duration,omitempty"`
	// Repeat Expire
	Expire *string `protobuf:"bytes,4,opt,name=expire,proto3,oneof" json:"expire,omitempty"`
	// Crontab configuration
	Crontab *RepeatCrontabSet `protobuf:"bytes,5,opt,name=crontab,proto3" json:"crontab,omitempty"`
}

func (x *RepeatOptions) Reset() {
	*x = RepeatOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_mute_v1_mute_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepeatOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepeatOptions) ProtoMessage() {}

func (x *RepeatOptions) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_mute_v1_mute_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepeatOptions.ProtoReflect.Descriptor instead.
func (*RepeatOptions) Descriptor() ([]byte, []int) {
	return file_pkg_mute_v1_mute_proto_rawDescGZIP(), []int{10}
}

func (x *RepeatOptions) GetStart() string {
	if x != nil && x.Start != nil {
		return *x.Start
	}
	return ""
}

func (x *RepeatOptions) GetEnd() string {
	if x != nil && x.End != nil {
		return *x.End
	}
	return ""
}

func (x *RepeatOptions) GetCrontabDuration() string {
	if x != nil && x.CrontabDuration != nil {
		return *x.CrontabDuration
	}
	return ""
}

func (x *RepeatOptions) GetExpire() string {
	if x != nil && x.Expire != nil {
		return *x.Expire
	}
	return ""
}

func (x *RepeatOptions) GetCrontab() *RepeatCrontabSet {
	if x != nil {
		return x.Crontab
	}
	return nil
}

type Tag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Tag
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Tag Value
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Tag) Reset() {
	*x = Tag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_mute_v1_mute_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tag) ProtoMessage() {}

func (x *Tag) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_mute_v1_mute_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tag.ProtoReflect.Descriptor instead.
func (*Tag) Descriptor() ([]byte, []int) {
	return file_pkg_mute_v1_mute_proto_rawDescGZIP(), []int{11}
}

func (x *Tag) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Tag) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_pkg_mute_v1_mute_proto protoreflect.FileDescriptor

var file_pkg_mute_v1_mute_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x75, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x75,
	0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x70, 0x6b, 0x67, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x6d, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x22,
	0x8b, 0x03, 0x0a, 0x04, 0x4d, 0x75, 0x74, 0x65, 0x12, 0x41, 0x0a, 0x0b, 0x6d, 0x75, 0x74, 0x65,
	0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x70, 0x6b, 0x67, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x6d, 0x75,
	0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x75, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x0a, 0x6d, 0x75, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x06, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x6b,
	0x67, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x6d, 0x75, 0x74, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x4a, 0x0a, 0x0e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2e, 0x6d, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x3f, 0x0a, 0x07, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x6d, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x6e, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f,
	0x6e, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x6d, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x06, 0x72, 0x65,
	0x70, 0x65, 0x61, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x6d, 0x75, 0x74, 0x65, 0x5f, 0x74, 0x61, 0x67,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x6d, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x61, 0x67, 0x52, 0x08, 0x6d, 0x75, 0x74, 0x65, 0x54, 0x61, 0x67, 0x73, 0x22, 0xb2, 0x01,
	0x0a, 0x09, 0x4d, 0x75, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x41, 0x0a, 0x07, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x2e, 0x6d, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x75, 0x74, 0x65, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x07, 0x6d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x12, 0x4e, 0x0a, 0x0c, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x6d, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x75, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x0b, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x22, 0x26, 0x0a, 0x14, 0x4d, 0x75, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x22, 0x0a, 0x10, 0x4d, 0x75,
	0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x70,
	0x0a, 0x0d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x1d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24,
	0x0a, 0x0b, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0a, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x22, 0xca, 0x01, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x51, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x6b,
	0x67, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x6d, 0x75, 0x74, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0b, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x53, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x6d,
	0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x29, 0x0a,
	0x17, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2a, 0x0a, 0x18, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x54, 0x0a, 0x0e, 0x4f, 0x6e, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x19, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x03, 0x65, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x6e, 0x64, 0x22, 0xb9, 0x01, 0x0a, 0x10, 0x52,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x43, 0x72, 0x6f, 0x6e, 0x74, 0x61, 0x62, 0x53, 0x65, 0x74, 0x12,
	0x15, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03,
	0x6d, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x68, 0x6f, 0x75, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x68, 0x6f, 0x75, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x15, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x03,
	0x64, 0x61, 0x79, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x88, 0x01,
	0x01, 0x12, 0x17, 0x0a, 0x04, 0x77, 0x65, 0x65, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x04, 0x52, 0x04, 0x77, 0x65, 0x65, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6d,
	0x69, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x64, 0x61, 0x79, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x77, 0x65, 0x65, 0x6b, 0x22, 0x83, 0x02, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x19, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10, 0x63, 0x72,
	0x6f, 0x6e, 0x74, 0x61, 0x62, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0f, 0x63, 0x72, 0x6f, 0x6e, 0x74, 0x61, 0x62, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x06, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x88, 0x01, 0x01, 0x12, 0x41, 0x0a, 0x07, 0x63, 0x72, 0x6f, 0x6e, 0x74,
	0x61, 0x62, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x6d, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x43, 0x72, 0x6f, 0x6e, 0x74, 0x61, 0x62, 0x53, 0x65,
	0x74, 0x52, 0x07, 0x63, 0x72, 0x6f, 0x6e, 0x74, 0x61, 0x62, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x6e, 0x64, 0x42, 0x13, 0x0a, 0x11,
	0x5f, 0x63, 0x72, 0x6f, 0x6e, 0x74, 0x61, 0x62, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x22, 0x2d, 0x0a, 0x03,
	0x54, 0x61, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x39, 0x5a, 0x37, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x47, 0x75, 0x61, 0x6e, 0x63, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6d, 0x75, 0x74, 0x65,
	0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_mute_v1_mute_proto_rawDescOnce sync.Once
	file_pkg_mute_v1_mute_proto_rawDescData = file_pkg_mute_v1_mute_proto_rawDesc
)

func file_pkg_mute_v1_mute_proto_rawDescGZIP() []byte {
	file_pkg_mute_v1_mute_proto_rawDescOnce.Do(func() {
		file_pkg_mute_v1_mute_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_mute_v1_mute_proto_rawDescData)
	})
	return file_pkg_mute_v1_mute_proto_rawDescData
}

var file_pkg_mute_v1_mute_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_pkg_mute_v1_mute_proto_goTypes = []interface{}{
	(*Mute)(nil),                     // 0: pkg.resources.mute.v1.Mute
	(*MuteRange)(nil),                // 1: pkg.resources.mute.v1.MuteRange
	(*MuteRangeAlertPolicy)(nil),     // 2: pkg.resources.mute.v1.MuteRangeAlertPolicy
	(*MuteRangeMonitor)(nil),         // 3: pkg.resources.mute.v1.MuteRangeMonitor
	(*NotifyOptions)(nil),            // 4: pkg.resources.mute.v1.NotifyOptions
	(*NotifyTarget)(nil),             // 5: pkg.resources.mute.v1.NotifyTarget
	(*NotifyTargetMemberGroup)(nil),  // 6: pkg.resources.mute.v1.NotifyTargetMemberGroup
	(*NotifyTargetNotification)(nil), // 7: pkg.resources.mute.v1.NotifyTargetNotification
	(*OnetimeOptions)(nil),           // 8: pkg.resources.mute.v1.OnetimeOptions
	(*RepeatCrontabSet)(nil),         // 9: pkg.resources.mute.v1.RepeatCrontabSet
	(*RepeatOptions)(nil),            // 10: pkg.resources.mute.v1.RepeatOptions
	(*Tag)(nil),                      // 11: pkg.resources.mute.v1.Tag
}
var file_pkg_mute_v1_mute_proto_depIdxs = []int32{
	1,  // 0: pkg.resources.mute.v1.Mute.mute_ranges:type_name -> pkg.resources.mute.v1.MuteRange
	4,  // 1: pkg.resources.mute.v1.Mute.notify:type_name -> pkg.resources.mute.v1.NotifyOptions
	5,  // 2: pkg.resources.mute.v1.Mute.notify_targets:type_name -> pkg.resources.mute.v1.NotifyTarget
	8,  // 3: pkg.resources.mute.v1.Mute.onetime:type_name -> pkg.resources.mute.v1.OnetimeOptions
	10, // 4: pkg.resources.mute.v1.Mute.repeat:type_name -> pkg.resources.mute.v1.RepeatOptions
	11, // 5: pkg.resources.mute.v1.Mute.mute_tags:type_name -> pkg.resources.mute.v1.Tag
	3,  // 6: pkg.resources.mute.v1.MuteRange.monitor:type_name -> pkg.resources.mute.v1.MuteRangeMonitor
	2,  // 7: pkg.resources.mute.v1.MuteRange.alert_policy:type_name -> pkg.resources.mute.v1.MuteRangeAlertPolicy
	6,  // 8: pkg.resources.mute.v1.NotifyTarget.member_group:type_name -> pkg.resources.mute.v1.NotifyTargetMemberGroup
	7,  // 9: pkg.resources.mute.v1.NotifyTarget.notification:type_name -> pkg.resources.mute.v1.NotifyTargetNotification
	9,  // 10: pkg.resources.mute.v1.RepeatOptions.crontab:type_name -> pkg.resources.mute.v1.RepeatCrontabSet
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_pkg_mute_v1_mute_proto_init() }
func file_pkg_mute_v1_mute_proto_init() {
	if File_pkg_mute_v1_mute_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_mute_v1_mute_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_mute_v1_mute_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MuteRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_mute_v1_mute_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MuteRangeAlertPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_mute_v1_mute_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MuteRangeMonitor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_mute_v1_mute_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_mute_v1_mute_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyTarget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_mute_v1_mute_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyTargetMemberGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_mute_v1_mute_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyTargetNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_mute_v1_mute_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnetimeOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_mute_v1_mute_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepeatCrontabSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_mute_v1_mute_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepeatOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_mute_v1_mute_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pkg_mute_v1_mute_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_pkg_mute_v1_mute_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_pkg_mute_v1_mute_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_pkg_mute_v1_mute_proto_msgTypes[10].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_mute_v1_mute_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_mute_v1_mute_proto_goTypes,
		DependencyIndexes: file_pkg_mute_v1_mute_proto_depIdxs,
		MessageInfos:      file_pkg_mute_v1_mute_proto_msgTypes,
	}.Build()
	File_pkg_mute_v1_mute_proto = out.File
	file_pkg_mute_v1_mute_proto_rawDesc = nil
	file_pkg_mute_v1_mute_proto_goTypes = nil
	file_pkg_mute_v1_mute_proto_depIdxs = nil
}
